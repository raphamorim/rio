"use strict";(self.webpackChunkrio_docs=self.webpackChunkrio_docs||[]).push([[8130],{7735:e=>{e.exports=JSON.parse('{"archive":{"blogPosts":[{"id":"/2025/05/19/rio-terminal-now-available-on-flathub-via-flatpak","metadata":{"permalink":"/blog/2025/05/19/rio-terminal-now-available-on-flathub-via-flatpak","editUrl":"https://github.com/raphamorim/rio/tree/main/docs/blog/2025-05-19-rio-terminal-now-available-on-flathub-via-flatpak.mdx","source":"@site/blog/2025-05-19-rio-terminal-now-available-on-flathub-via-flatpak.mdx","title":"Rio Terminal Now Available on Flathub via Flatpak","description":"Since v0.2.16, Rio terminal is available on Flathub.","date":"2025-05-19T12:28:00.000Z","tags":[],"readingTime":1.285,"hasTruncateMarker":false,"authors":[],"frontMatter":{"layout":"post","title":"Rio Terminal Now Available on Flathub via Flatpak","date":"2025-05-19 12:28","description":"Since v0.2.16, Rio terminal is available on Flathub.","categories":"windows macos linux bsd"},"unlisted":false,"nextItem":{"title":"Rio is now releasing with GoReleaser","permalink":"/blog/2025/03/01/rio-is-now-releasing-with-goreleaser"}},"content":"We\u2019re excited to share some great news with the Linux community \u2014 Rio Terminal is now officially available on Flathub via Flatpak!\\n\\nFor those unfamiliar, Rio is a fast, GPU-accelerated terminal emulator built in Rust. It offers a beautiful, minimal interface with modern features such as ligature support, true-color rendering, tabs, and a configuration-less setup experience \u2014 making it a top choice for developers and terminal power users who want performance without compromise.\\n\\nDemo of Rio running on a Steam Deck:\\n\\n![Demo flatpak on Steam Deck](/assets/demos/demo-flatpak-steamdeck.jpg)\\n\\n## Why Flatpak?\\n\\nDistributing Rio via Flatpak and Flathub means easier access and broader compatibility across Linux distributions. Whether you\'re running Fedora, Ubuntu, Arch, or anything in between, you can now install Rio in seconds with:\\n\\n```bash\\nflatpak install flathub com.rioterm.Rio\\n```\\n\\nFlatpak ensures consistent sandboxing, updates, and dependency management, making Rio more accessible and reliable for a diverse range of users.\\n\\nThis milestone wouldn\u2019t have been possible without the dedicated effort of [Ranieri Althoff](https://github.com/ranisalt), who generously contributed the Flatpak packaging and submission to Flathub. Ranieri\'s work ensures that more users can discover and enjoy Rio with minimal friction, and we\u2019re incredibly grateful for the time and expertise he\u2019s invested.\\n\\n## Get Started with Rio\\n\\nReady to try it out? Head over to the [Flathub page](https://flathub.org/apps/com.rioterm.Rio), click \u201cInstall,\u201d or run the Flatpak command in your terminal. For configuration tips, keyboard shortcuts, and advanced features, check out the [Rio GitHub repo](https://github.com/raphamorim/rio).\\n\\nWe\u2019re thrilled to see Rio reaching more users and evolving as a next-gen terminal emulator for the Linux desktop.\\n\\nHappy hacking!"},{"id":"/2025/03/01/rio-is-now-releasing-with-goreleaser","metadata":{"permalink":"/blog/2025/03/01/rio-is-now-releasing-with-goreleaser","editUrl":"https://github.com/raphamorim/rio/tree/main/docs/blog/2025-03-01-rio-is-now-releasing-with-goreleaser.mdx","source":"@site/blog/2025-03-01-rio-is-now-releasing-with-goreleaser.mdx","title":"Rio is now releasing with GoReleaser","description":"Since v0.2.8, Rio terminal is using GoReleaser to handle its release pipeline.","date":"2025-03-01T10:28:00.000Z","tags":[],"readingTime":0.76,"hasTruncateMarker":false,"authors":[],"frontMatter":{"layout":"post","title":"Rio is now releasing with GoReleaser","date":"2025-03-01 10:28","description":"Since v0.2.8, Rio terminal is using GoReleaser to handle its release pipeline.","categories":"windows macos linux bsd"},"unlisted":false,"prevItem":{"title":"Rio Terminal Now Available on Flathub via Flatpak","permalink":"/blog/2025/05/19/rio-terminal-now-available-on-flathub-via-flatpak"},"nextItem":{"title":"New year, new look","permalink":"/blog/2025/01/17/new-year-new-look"}},"content":"Since v0.2.8, I\'ve been using GoReleaser to release Rio, which makes my life so much easier.\\nBefore, I had a mix of local (and manual) work with an automated pipeline.\\nIn the automation side, I didn\'t have support to `.rpm` packages, and still had to update a couple of files with the new version. \\nFrankly, it\'s the kind of work I don\'t want to do for every release.\\n\\nGoReleaser is a release automation tool. It currently supports Go, Rust, Zig, and TypeScript (with Bun and Deno). \\nGoReleaser was created to solve a problem we all had at some point: releasing software is boring and error prone.\\n\\n![GoReleaser logo](https://raw.githubusercontent.com/goreleaser/artwork/refs/heads/master/goreleaser_rust_zig_16_9.png)\\n\\nRio wouldn\'t be using GoReleaser without the awesome work of [Vedant Mohan Goyal](https://github.com/vedantmgoyal9) and [Carlos Alexandro Becker](https://github.com/caarlos0).\\nSpeaking of which, Vedant is writing a blog post about migrating the Rio pipeline to GoReleaser - seriously go follow him!\\n\\nThat\'s it for today folks :)"},{"id":"/2025/01/17/new-year-new-look","metadata":{"permalink":"/blog/2025/01/17/new-year-new-look","editUrl":"https://github.com/raphamorim/rio/tree/main/docs/blog/2025-01-17-new-year-new-look.mdx","source":"@site/blog/2025-01-17-new-year-new-look.mdx","title":"New year, new look","description":"New year, new look!! There you go, Rio terminal got a new logo and icon made by Christian Rocha.","date":"2025-01-17T15:34:00.000Z","tags":[],"readingTime":0.625,"hasTruncateMarker":false,"authors":[],"frontMatter":{"layout":"post","title":"New year, new look","date":"2025-01-17 15:34","description":"New year, new look!! There you go, Rio terminal got a new logo and icon made by Christian Rocha.","categories":"windows macos linux bsd"},"unlisted":false,"prevItem":{"title":"Rio is now releasing with GoReleaser","permalink":"/blog/2025/03/01/rio-is-now-releasing-with-goreleaser"},"nextItem":{"title":"Looking ahead to 0.1.0","permalink":"/blog/2024/04/18/looking-ahead-to-0.1.0"}},"content":"New year, new look!! There you go, Rio terminal got a new logo/icon made by [Christian Rocha](https://x.com/meowgorithm).\\n\\n| Before  | After |\\n| ------------- | ------------- |\\n| <img alt=\\"Rio logo before\\" src=\\"https://upload.wikimedia.org/wikipedia/commons/thumb/6/69/Rio-terminal-logo.png/440px-Rio-terminal-logo.png\\" width=\\"880px\\" />  | ![Rio logo after](/assets/rio-logo.png)  |\\n\\nThe first logo was made by myself but lacked a chef touch that Christian masterfully gave to it!\\n\\nYou may have already noticed on MacOS that if you\'re using version 0.2.24, in the upcoming versions it will be patched to Linux, BSD and Microsoft Windows.\\n\\nOk, but what if I like the new logo but I am attached to the old logo? No worries, I am working on a Rio API for changing app icons via configuration and bult-in.\\n\\nThat\'s it for today folks :)"},{"id":"/2024/04/18/looking-ahead-to-0.1.0","metadata":{"permalink":"/blog/2024/04/18/looking-ahead-to-0.1.0","editUrl":"https://github.com/raphamorim/rio/tree/main/docs/blog/2024-04-18-looking-ahead-to-0.1.0.mdx","source":"@site/blog/2024-04-18-looking-ahead-to-0.1.0.mdx","title":"Looking ahead to 0.1.0","description":"Let\'s talk about what\'s coming to Rio terminal","date":"2024-04-18T00:34:00.000Z","tags":[],"readingTime":1.68,"hasTruncateMarker":false,"authors":[],"frontMatter":{"layout":"post","title":"Looking ahead to 0.1.0","date":"2024-04-18 00:34","description":"Let\'s talk about what\'s coming to Rio terminal","categories":"windows macos linux"},"unlisted":false,"prevItem":{"title":"New year, new look","permalink":"/blog/2025/01/17/new-year-new-look"},"nextItem":{"title":"Settings UI, Welcome UI, Adaptive theme, crates.io and more","permalink":"/blog/2023/09/19/release-0.0.19"}},"content":"import { Tweet } from \'react-tweet\';\\n\\nHey there folks!\\n\\nThe Rio Terminal is a side project based on my free time (low this year due to being a new parent), when I started to work on Rio my goal was to learn mostly and eventually, I ended up using Rio in my daily life. However, the terminal wasn\'t designed to fit people\'s usage more than myself and would be quite hard to scale the source code to fit some of the feature requests, considering I never expected Rio to be used besides myself.\\n\\nAs I open-sourced Rio, many people started to use and eventually requests came in, making me realize that parts of the terminal would have to evolve to comprehend such requests and would eventually mean a rewrite of core parts along with incremental changes in other parts.\\n\\nI have been working on 0.1.0 release since last December and still have a lot to be done ([Github backlog for 0.1.0](https://github.com/users/raphamorim/projects/6/views/1)). It is hard to give an estimation because there\'s no regular promised cadence and, I am not in a rush because it will require a lot of further testing and writing a lot of tests as well. Releases are likely to be made in small versions, is very likely that 0.1.0 will start with MacOS with Windows (I hope so at least).\\n\\nSummary of 0.1.0 goals:\\n\\n- Split screens.\\n- Stabilization of different fonts besides the default one.\\n- New windowing, migration from Winit to a project created for Rio purposes, called WA. WA uses gaming directives and is a mix of windowing architecture from [not-fl3/miniquad](https://github.com/not-fl3/miniquad) and [makepad/makepad](https://github.com/makepad/makepad) along with [winit](https://github.com/rust-windowing/winit).\\n- Sixel support.\\n- Font ligatures.\\n- Auto-Italicize and Auto-Bolding fonts.\\n- Addition of SIMD support for a few critical/repetitive operations.\\n- Emoji support.\\n- Give some love to Linux X11/Wayland to bring the native experience closer.\\n\\nNote: Finally got a second computer with Windows/Linux, and it will make it insanely easier to work on Rio than I was doing before.\\n\\n<Tweet id=\\"1774416415073702204\\" />"},{"id":"/2023/09/19/release-0.0.19","metadata":{"permalink":"/blog/2023/09/19/release-0.0.19","editUrl":"https://github.com/raphamorim/rio/tree/main/docs/blog/2023-09-19-release-0.0.19.md","source":"@site/blog/2023-09-19-release-0.0.19.md","title":"Settings UI, Welcome UI, Adaptive theme, crates.io and more","description":"Crates.io, Alpine Linux, openSUSE, Nix home manager, adaptive theme, settings UI, welcome UI, blinking cursor, plain navigation mode ...","date":"2023-09-19T13:53:00.000Z","tags":[],"readingTime":4.045,"hasTruncateMarker":false,"authors":[],"frontMatter":{"layout":"post","title":"Settings UI, Welcome UI, Adaptive theme, crates.io and more","date":"2023-09-19 13:53","description":"Crates.io, Alpine Linux, openSUSE, Nix home manager, adaptive theme, settings UI, welcome UI, blinking cursor, plain navigation mode ...","categories":"windows macos linux webassembly"},"unlisted":false,"prevItem":{"title":"Looking ahead to 0.1.0","permalink":"/blog/2024/04/18/looking-ahead-to-0.1.0"},"nextItem":{"title":"New font configuration API and native tabs","permalink":"/blog/2023/08/29/release-0.0.17"}},"content":"This post also includes changes of v0.0.19.\\n\\n### Highlight #1: New window API (breaking change)\\n\\nConfiguration properties: window_height, window_width and window_opacity has been moved to a new window/background API:\\n\\n```toml\\n# Window configuration\\n#\\n# \u2022 width - define the initial window width.\\n#   Default: 600\\n#\\n# \u2022 height - define the initial window height.\\n#   Default: 400\\n#\\n# \u2022 mode - define how the window will be created\\n#     - \\"Windowed\\" (default) is based on width and height\\n#     - \\"Maximized\\" window is created with maximized\\n#     - \\"Fullscreen\\" window is created with fullscreen\\n#\\n[window]\\nwidth = 600\\nheight = 400\\nmode = \\"Windowed\\"\\n```\\n\\nFrom now and on you can also set image as background.\\n\\n```toml\\n# Background configuration\\n#\\n# \u2022 opacity - changes the background transparency state\\n#   Default: 1.0\\n#\\n# \u2022 mode - defines background mode between \\"Color\\" and \\"Image\\"\\n#   Default: Color\\n#\\n# \u2022 image - Set an image as background\\n#   Default: None\\n#\\n[background]\\nmode = \\"Image\\"\\nopacity = 1.0\\n[background.image]\\npath = \\"/Users/rapha/Desktop/eastward.jpg\\"\\nwidth = 200.0\\nheight = 200.0\\nx = 0.0\\n```\\n\\nAlthough you can define opacity though the new configuration API it does not work either for the image neither for the window. This something will be fixed in upcoming releases. An example below using the configuration we just saw.\\n\\n![Example background](https://media.discordapp.net/attachments/1110689410258841662/1152881776348364811/F6JGpamXsAAWvcG.png?width=1048&height=848)\\n\\nnote: The image above is from the [Eastward game](<https://en.wikipedia.org/wiki/Eastward_(video_game)>)\\n\\n## Highlight #2: crates.io\\n\\nRio terminal is now also available in crates.io: https://crates.io/crates/rioterm .\\n\\n```sh\\ncargo install rioterm\\n```\\n\\n## Highlight #3: Alpine Linux, openSUSE and Nix home manager.\\n\\n\u2022 Rio has landed in Nix home manager: [nix-community/home-manager/pull/4118](https://github.com/nix-community/home-manager/pull/4118) and huge props to [@otaviosalvador](https://twitter.com/otaviosalvador) for making it possible.\\n\\n\u2022 Rio has landed in Alpine Linux: [gitlab.alpinelinux.org](https://gitlab.alpinelinux.org/alpine/aports/-/merge_requests/51369) and huge props to [@androw](https://github.com/androw) for making it possible.\\n\\n\u2022 Rio has landed in openSUSE: [build.opensuse.org](https://build.opensuse.org/package/show/X11:terminals/rioterm) and huge props to [@androw](https://github.com/androw) for making it possible.\\n\\n## Highlight #4: Welcome screen and default creation of configuration file\\n\\nNow Rio terminal does create the configuration file per first initialization.\\n\\n![Welcome message](https://user-images.githubusercontent.com/240594/268500927-788ea316-ede8-4d23-ba1f-9621a6a82908.png)\\n\\n## Highlight #5: Settings UI\\n\\nAfter v0.0.19, Rio will start to provide a custom internal settings UI, where you can manage your configuration without edit the file.\\n\\n![Settings UI](/assets/posts/0.0.19/demo-settings.png)\\n\\nNote: Not all the configuration options has been ported, so you would still need to use the config file for specific configuration updates.\\n\\n## Highlight #6: Error handling\\n\\nConfiguration errors, command errors, font not found and etecetera are not silent anymore. This version introduces an UI for error handling.\\n\\n![Error handling](/assets/posts/0.0.19/demo-error-handling.png)\\n\\n## Highlight #7: Adaptive theme\\n\\nRio support theme based on the system theme (light and dark). This configuration only works for Web, MacOS and Windows.\\n\\n```toml\\n[adaptive-theme]\\nlight = \\"belafonte-day\\"\\ndark = \\"belafonte-night\\"\\n```\\n\\nExample of usage with MacOS:\\n\\n![Settings UI](/assets/features/adaptive-theme.gif)\\n\\n## Highlight #8: Blinking cursor\\n\\nRio now supports blinking cursor.\\n\\n```toml\\n# Blinking Cursor\\n#\\n# Default is false\\n#\\nblinking-cursor = true\\n```\\n\\n## Highlight #9: Navigation mode called \\"Plain\\"\\n\\nNavigation mode \\"Plain\\" is perfect if you use tmux/zellij or anything similar.\\n\\nPlain navigation mode will simply turn off any platform key binding, will not add any key binding (like creation of tabs, windows, panels and other platform key bindings). Note it also get rid of platform key bingins such as shift+control+c for example, to re-add it you would need to map yourself.\\n\\nThis mode is great if you want configure every single bit of how Rio key bindings will work.\\n\\nUsage:\\n\\n```toml\\n[navigation]\\nmode = \\"Plain\\"\\n```\\n\\n## Full changelog of v0.0.19\\n\\n- Fix for retrieving shell environment variable when running inside of Flatpak sandbox (Ref: https://github.com/raphamorim/rio/issues/198).\\n- Rio terminal is now also available in crates.io: https://crates.io/crates/rioterm .\\n- Added \\"navigation.mode = \\"Plain\\"\\", it basically disables all platform key bindings for tabs, windows and panels creation (Ref https://github.com/raphamorim/rio/issues/213).\\n- Support for blinking cursor (Ref: https://github.com/raphamorim/rio/issues/137) (this option is not enabled by default).\\n- Migrated font-kit to a custom font loader.\\n- Support to MacOS tile window positioning feature (left or right).\\n- Added support to MacOS display native top bar items.\\n- Support to adaptive theme (theme selection based on user system theme variant \\"dark\\" or \\"light\\").\\n- Implemented \\"ScrollPageUp\\", \\"ScrollPageDown\\", \\"ScrollHalfPageUp\\", \\"ScrollHalfPageDown\\", \\"ScrollToTop\\", \\"ScrollToBottom\\", \\"ScrollLineUp\\", \\"ScrollLineDown\\" (Ref: https://github.com/raphamorim/rio/issues/206).\\n- Support to \\"fonts.family\\" (it overwrites regular, bold, bold-italic and italic font families).\\n- Added a welcome screen UI.\\n- Added a settings UI.\\n- Exposes \\"RIO_CONFIG\\" environment variable that contains the path of the configuration.\\n- Rio creates a configuration file with all defaults if does not exist.\\n- Added \\"OpenConfigEditor\\" key binding for all platforms.\\n- Configuration property \\"editor\\" was removed.\\n- Created Assistant, Rio terminal UI for display error (Ref: https://github.com/raphamorim/rio/issues/168).\\n- Fix \'Backspace\' keypress triggers Ctrl+h keybinding in Zellij instead of deleting character. (Ref: https://github.com/raphamorim/rio/issues/197).\\n- Implemented \\"TERM_PROGRAM\\" and \\"TERM_PROGRAM_VERSION\\" (Ref: https://github.com/raphamorim/rio/issues/200).\\n- Whenever native tabs is on disable macos deadzone logic."},{"id":"/2023/08/29/release-0.0.17","metadata":{"permalink":"/blog/2023/08/29/release-0.0.17","editUrl":"https://github.com/raphamorim/rio/tree/main/docs/blog/2023-08-29-release-0.0.17.md","source":"@site/blog/2023-08-29-release-0.0.17.md","title":"New font configuration API and native tabs","description":"Rio terminal release: New font configuration API, native tabs, kitty keyboard protocol and other stuff.","date":"2023-08-29T17:53:00.000Z","tags":[],"readingTime":1.655,"hasTruncateMarker":false,"authors":[],"frontMatter":{"layout":"post","title":"New font configuration API and native tabs","date":"2023-08-29 17:53","description":"Rio terminal release: New font configuration API, native tabs, kitty keyboard protocol and other stuff.","categories":"windows macos linux webassembly"},"unlisted":false,"prevItem":{"title":"Settings UI, Welcome UI, Adaptive theme, crates.io and more","permalink":"/blog/2023/09/19/release-0.0.19"},"nextItem":{"title":"Support to tabs, custom key bindings, performance improvements and other updates","permalink":"/blog/2023/08/02/release-0.0.15"}},"content":"This post also includes changes from v0.0.16 and v0.0.17.\\n\\n## Highlights\\n\\n- New font configuration API.\\n- Native Tabs for MacOS.\\n\\n## Breaking change: New font API\\n\\nIf you don\'t use Rio default font configuration you will be affected by this change.\\n\\nA new API has been introduced to select fonts, now you can configure even different font families for \\"regular\\", \\"bold\\", \\"italic\\" and \\"bold-italic\\".\\n\\n```toml\\n[fonts]\\nsize = 18\\n\\n[fonts.regular]\\nfamily = \\"cascadiamono\\"\\nstyle = \\"normal\\"\\nweight = 400\\n\\n[fonts.bold]\\nfamily = \\"cascadiamono\\"\\nstyle = \\"normal\\"\\nweight = 800\\n\\n[fonts.italic]\\nfamily = \\"cascadiamono\\"\\nstyle = \\"italic\\"\\nweight = 400\\n\\n[fonts.bold-italic]\\nfamily = \\"cascadiamono\\"\\nstyle = \\"italic\\"\\nweight = 800\\n```\\n\\n## Native Tabs (macOs only)\\n\\nNative tabs have arrived for MacOS users.\\n\\n![native tab example](/assets/posts/0.0.17/demo-native-tabs.png)\\n\\nTo configure it you will need to update the configuration file and set navigation mode as \\"NativeTab\\":\\n\\n```toml\\n[navigation]\\nmode = \\"NativeTab\\"\\n```\\n\\n## Changelog of v0.0.17 along with v0.0.16\\n\\n- Configuration \\"font\\" does not work anymore, a new configuration API of font selection has been introduced.\\n- Action \\"TabSwitchNext\\" and \\"TabSwitchPrev\\" has been renamed to \\"SelectNextTab\\" and \\"SelectPrevTab\\".\\n- Support to \\"NativeTab\\" (MacOS only).\\n- Support for kitty\'s keyboard protocol (\\"CSI u\\"). Ref: https://sw.kovidgoyal.net/kitty/keyboard-protocol/\\n- Added new actions for tab selection: \\"SelectTab1\\", \\"SelectTab2\\", \\"SelectTab3\\", \\"SelectTab4\\", \\"SelectTab5\\", \\"SelectTab6\\", \\"SelectTab7\\", \\"SelectTab8\\", \\"SelectTab9\\", \\"SelectLastTab\\".\\n- Support lowercased action and fix overwrite for actions in custom key bindings.\\n- Added action \\"Minimize\\" for minimize Rio terminal window.\\n- Added action \\"ClearHistory\\" for clear terminal saved history.\\n- Added action \\"ReceiveChar\\" for custom key bindings.\\n- New default key bindings for Linux and Windows so that conflicts with readline key bindings are removed.\\n- Winit Version 0.29.1-beta.\\n- Allow paste with the middle mouse of the button (fixes https://github.com/raphamorim/rio/issues/123).\\n- Support startup notify protocol to raise initial window on Wayland/X11.\\n- Fix Double-tap by touchpad on the titlebar doesn\'t maximize/unmaximize the window in GNOME 44, Wayland.\\n- Fix tab/breadcrumb bug introduced in 0.0.15\\n- Introduce new configuration property: \\"navigation.macos-hide-window-button\\"."},{"id":"/2023/08/02/release-0.0.15","metadata":{"permalink":"/blog/2023/08/02/release-0.0.15","editUrl":"https://github.com/raphamorim/rio/tree/main/docs/blog/2023-08-02-release-0.0.15.mdx","source":"@site/blog/2023-08-02-release-0.0.15.mdx","title":"Support to tabs, custom key bindings, performance improvements and other updates","description":"Support to tabs, custom key bindings, performance improvements, color automation for tabs, binary size optimization, bug fixes and other updates.","date":"2023-08-02T12:34:00.000Z","tags":[],"readingTime":3.335,"hasTruncateMarker":false,"authors":[],"frontMatter":{"layout":"post","title":"Support to tabs, custom key bindings, performance improvements and other updates","date":"2023-08-02 12:34","description":"Support to tabs, custom key bindings, performance improvements, color automation for tabs, binary size optimization, bug fixes and other updates.","categories":"windows macos linux webassembly"},"unlisted":false,"prevItem":{"title":"New font configuration API and native tabs","permalink":"/blog/2023/08/29/release-0.0.17"},"nextItem":{"title":"Rio 0.0.11","permalink":"/blog/2023/07/19/release-0.0.11"}},"content":"import { Tweet } from \'react-tweet\';\\n\\nThis post also includes changes from v0.0.13 and v0.0.12.\\n\\n## Highlights\\n\\n- Navigation.\\n- Custom key bindings.\\n- Performance updates.\\n- Color automation for tabs.\\n\\n## Navigation\\n\\nRio allows to choose navigation between the following options:\\n\\n- `CollapsedTab`\\n- `BottomTab`\\n- `TopTab`\\n- `Breadcrumb`\\n\\nYou can set the navigation mode in the configuration file. An example of configuration:\\n\\n```toml\\n[navigation]\\nmode = \\"BottomTab\\"\\nuse-current-path = true\\nclickable = false\\n```\\n\\nNote: BottomTab and TopTab does not support click mode yet.\\n\\nBelow some images with different navigation setups:\\n\\n- First image: BottomTab navigation x11.\\n- Second image: TopTav navigation wayland.\\n\\n![example navigation x11](/assets/posts/0.0.15/demo-navigation-x11.png)\\n\\n![second example navigation Wayland](/assets/posts/0.0.15/demo-navigation-wayland.png)\\n\\n- First image: Breadcrumb navigation macos.\\n- Second image: BottomTab navigation macos.\\n\\n![example breadcrumb navigation macos](/assets/features/demo-breadcrumb.png)\\n\\n![example BottomTab navigation macos](/assets/features/demo-bottom-tab.png)\\n\\nMore info about navigation in [docs/navigation](/docs/navigation/).\\n\\n## Sugarloaf performance improvements\\n\\nPerformance improvements with Sugarloaf de-duplication of input data.\\n\\nBefore an average sugarloaf.stack call would cost around \\"~253.5\xb5s\\" and now it does cost an average of \\"~51.5\xb5s\\".\\n\\nThe algorithm is effective whenever the terminal has a lot of repetition like empty spaces. The benchmark test below was made rendering 100.000 characters that had repetition:\\n\\n![second example navigation Wayland](/assets/posts/0.0.15/de-duplication-sugarloaf.jpg)\\n\\nThe de-duplication algorithm in the renderer considerably reduced the initial rendering time from avg **6ms to 2ms** and using Rio in a large screen (>=136 columns) has dropped from **36ms to 8ms**.\\n\\nTweet reference:\\n\\n<Tweet id=\\"1685612156773961728\\" />\\n\\n## Color automation for navigation\\n\\nRio allows to specify color overwrites for tabs based on program context.\\n\\nThe example below sets `#FFFF00` as color background whenever `nvim` is running.\\n\\n![example navigation with color automation](/assets/features/demo-colorized-navigation.png)\\n![second example navigation with color automation](/assets/features/demo-colorized-navigation-2.png)\\n\\nThe configuration would be like:\\n\\n```toml\\n[navigation]\\ncolor-automation = [\\n  { program = \\"nvim\\", color = \\"#FFFF00\\" }\\n]\\n```\\n\\n## Custom key bindings\\n\\nNow you can configure custom key bindings for Rio terminal.\\n\\nBelow an example of two custom key bindings:\\n\\n```toml\\n[bindings]\\nkeys = [\\n  { key = \\"q\\", with = \\"super\\", action = \\"Quit\\" }\\n  # Bytes[27, 91, 53, 126] is equivalent to \\"\\\\x1b[5~\\"\\n  { key = \\"home\\", with = \\"super | shift\\", bytes = [27, 91, 53, 126] }\\n]\\n```\\n\\nFor example, in the first binding will tell Rio to close the terminal every time that \\"q\\" key is pressed along with \\"super\\" (in MacOS the \\"super\\" key is \\"command\\").\\n\\nMore info about custom key bindings in [docs/default-key-bindings](/docs/default-key-bindings/).\\n\\n## Changelog of v0.0.15 along with 0.0.13 and 0.0.12\\n\\n- Introduce configurable navigation with the following options: \\"CollapsedTab\\" (default), \\"Breadcrumb\\", \\"TopTab\\" and \\"BottomTab\\".\\n- Performance improvements with Sugarloaf de-duplication of input data. Before: \\"~253.5\xb5s\\" and now \\"~51.5\xb5s\\".\\n- Introduce \\"navigation.use-current-path\\" which sets if a tab/breacrumb should be open from the current context path.\\n- Fix rendering unicode with 1 width glyphs (fix [#160](https://github.com/raphamorim/rio/issues/160)).\\n- Increased max tabs from 9 to 72.\\n- Default colors \\"selection-foreground\\" and \\"selection-background\\" has changed.\\n- Default colors \\"tab\\" and \\"tab-active\\" has changed.\\n- Implementation of custom key bindings ([#117](https://github.com/raphamorim/rio/issues/117)).\\n- Fix .deb packing in GH Actions.\\n- Fix key binding for switch tab next (MacOS only).\\n- Fix scroll when copying text outside of offset.\\n- Fix copy key bindings.\\n- Fix Fuzzy Finder issue ([#132](https://github.com/raphamorim/rio/issues/132)).\\n- Introduce Copa (Alacritty\'s VTE forked version to introduce new sequences/instructions in next versions).\\n- Upgraded Winit to 0.29.0-beta.0\\n- Support for keybindings with dead keys.\\n- \\"Back\\"/\\"Forward\\" mouse buttons support in bindings.\\n- Fix unconditional query of xdg-portal settings on Wayland\\n- Fix \\"Maximized\\" startup mode not filling the screen properly on GNOME Wayland.\\n- Fix Default Vi key bindings for \\"Last\\"/\\"First\\" actions not working on X11/Wayland.\\n- Set \\"padding-x\\" to 0 for non-macos.\\n- Set \\"app_id\\"/\\"WM_CLASS\\" property on Wayland/X11.\\n- Strip binary is on for release builds.\\n- Each paste or key binding that has writing leads to clear selection and scroll bottom.\\n- Fixed over-rendering when scrolling.\\n- Fix selection.\\n- Support to copy using VIM.\\n- Fix for MacOS deadzone changing cursor to draggable on window buttons.\\n- Fix for scroll using tmux."},{"id":"/2023/07/19/release-0.0.11","metadata":{"permalink":"/blog/2023/07/19/release-0.0.11","editUrl":"https://github.com/raphamorim/rio/tree/main/docs/blog/2023-07-19-release-0.0.11.md","source":"@site/blog/2023-07-19-release-0.0.11.md","title":"Rio 0.0.11","description":"Performance improvements around 80-110%, binary size optimization, usage of pixel scale and others.","date":"2023-07-19T12:34:00.000Z","tags":[],"readingTime":0.785,"hasTruncateMarker":false,"authors":[],"frontMatter":{"layout":"post","title":"Rio 0.0.11","date":"2023-07-19 12:34","description":"Performance improvements around 80-110%, binary size optimization, usage of pixel scale and others.","categories":"release windows macos linux"},"unlisted":false,"prevItem":{"title":"Support to tabs, custom key bindings, performance improvements and other updates","permalink":"/blog/2023/08/02/release-0.0.15"},"nextItem":{"title":"Rio 0.0.9","permalink":"/blog/2023/07/17/release-0.0.9"}},"content":"Example of Rio v0.0.11 using the new sugarloaf:\\n\\nv0.0.11 includes v0.0.10 with a bug fix of CachedSugar for font styles.\\n\\n- Major rewrote of sugarloaf.\\n- Sugarloaf: Performance improvements around 80-110%.\\n- Sugarloaf: Introduced CachedSugar.\\n- Sugarloaf: Usage of PixelScale.\\n- Sugarloaf: Line-height support.\\n- Open new tab using the current tab directory.\\n- Fix some symbols break the horizontal and vertical alignment of lines (ref [#148](https://github.com/raphamorim/rio/issues/148)).\\n- Fix font size configuration is confusing (ref [#139](https://github.com/raphamorim/rio/issues/139)).\\n- Fix Glyph not rendered in prompt (ref: [#135](https://github.com/raphamorim/rio/issues/135)).\\n- Use fork by default in test context.\\n- Updated terminfo.\\n- Increased default font size to 18.\\n- Move to next and prev tab using keybindings.\\n- Setting editor by keybindings and new property called \\"editor\\" in configuration file.\\n- Rio creates \\".deb\\" packages (canary and release).\\n- Binary size optimization (ref: [#152](https://github.com/raphamorim/rio/pull/152)) by [@OlshaMB](https://github.com/OlshaMB)\\n- A huge thanks to [@ralgozino](https://github.com/ralgozino) for all bug reporting and testing through this version development."},{"id":"/2023/07/17/release-0.0.9","metadata":{"permalink":"/blog/2023/07/17/release-0.0.9","editUrl":"https://github.com/raphamorim/rio/tree/main/docs/blog/2023-07-17-release-0.0.9.md","source":"@site/blog/2023-07-17-release-0.0.9.md","title":"Rio 0.0.9","description":"Multi window support, FreeBSD support, possibility of choose between Spawn and Fork, inverse instruction, multi byte rendering fixes, support to older MacOS versions, select shell and working-dir in configuration file.","date":"2023-07-17T12:34:00.000Z","tags":[],"readingTime":3.525,"hasTruncateMarker":false,"authors":[],"frontMatter":{"layout":"post","title":"Rio 0.0.9","date":"2023-07-17 12:34","description":"Multi window support, FreeBSD support, possibility of choose between Spawn and Fork, inverse instruction, multi byte rendering fixes, support to older MacOS versions, select shell and working-dir in configuration file.","categories":"release windows macos linux"},"unlisted":false,"prevItem":{"title":"Rio 0.0.11","permalink":"/blog/2023/07/19/release-0.0.11"},"nextItem":{"title":"Rio 0.0.7","permalink":"/blog/2023/07/07/release-0.0.7"}},"content":"- Multi window support.\\n- Support to older MacOS versions (older or equal to Big Sur).\\n- Possibility of choose between Spawn and Fork.\\n- Inverse instruction.\\n- Introduced \\"rio\\" terminfo.\\n- Multi byte rendering fixes.\\n- Select shell and working-dir in configuration file.\\n- FreeBSD support and [added to FreeBSD ports](https://github.com/freebsd/freebsd-ports/commit/8582b8c59459a7dc5112a94a39de45f6cc124c3e).\\n\\n<br/>\\n\\n# Overview\\n\\nRio release 0.0.9 is finally here, there\'s a lot of updates to cover so let\'s get started. I also would like to remind you that Rio is still unstable. This release adds a lot of bug fixes and feature additions in order to make Rio terminal stable.\\n\\n## Multi window support\\n\\nRio terminal has added the support to multi window feature.\\n\\n<img src=\\"https://miro.medium.com/v2/resize:fit:2914/format:webp/1*KyVD4EJ-wQU8pTmOFTwaQg.png\\" width=\\"100%\\" />\\n\\nShortcuts:\\n\\n- MacOS: Command + N\\n- Windows: Alt + N\\n- Linux: Control + N\\n\\n## Support to older MacOS versions (older or equal to Big Sur).\\n\\nNow it is available for versions below Ventura (Rome).\\n\\n## Choose between fork or spawn\\n\\nDecide which one to use in the configuration file by the usage of property \\"use-fork\\":\\n\\n```toml\\nuse-fork = false\\n```\\n\\nDefaults for POSIX-based systems:\\n\\n- MacOS: spawn processes\\n- Linux/BSD: fork processes\\n\\n## Inverse instructions\\n\\nBefore the v0.0.9, programs were not correctly rendered in the terminal due to the lack of inverse instruction in Rio.\\n\\nFor example, ranger uses inverse to show the active path.\\n\\nBefore:\\n\\n![Rio before 0.0.9](https://user-images.githubusercontent.com/3630346/245280487-12af56a1-d9ad-4310-bd4e-3d96d42e8a42.png)\\n\\nNow:\\n\\n![Rio now](https://user-images.githubusercontent.com/3630346/251224085-39531c88-8e04-48ad-b09a-8fd12a0e011b.png)\\n\\n## Introduced \\"rio\\" terminfo\\n\\nTerminfo (formerly Termcap) is a database of terminal capabilities and more. For every (well almost) model of terminal it tells application programs what the terminal is capable of doing.\\n\\nIt tells what escape sequences (or control characters) to send to the terminal in order to do things such as move the cursor to a new location, erase part of the screen, scroll the screen, change modes, change appearance (colors, brightness, blinking, underlining, reverse video etc.).\\n\\nAfter about 1980, many terminals supported over a hundred different commands (some of which take numeric parameters).\\n\\nRio terminal has now it\'s own terminfo:\\n\\n```sh\\n$ echo $TERM\\nrio\\n```\\n\\nMore info [here](/docs/install#terminfo).\\n\\n## Fixes for multi-byte rendering\\n\\nBefore the v0.0.9, multi-byte characters were not correctly rendered in the terminal.\\n\\nBefore: As reported in the issue [#127](https://github.com/raphamorim/rio/issues/127)\\n\\nNow:\\n\\n![Now](https://user-images.githubusercontent.com/3630346/252940293-da345089-3d4c-4d05-8b0f-d0665f1e1347.png)\\n\\n## Configuration file addition: shell\\n\\nNow you can set \\"shell.program\\" to the path of your favorite shell, e.g. \\"/bin/fish\\".\\n\\nEntries in \\"shell.args\\" are passed unmodified as arguments to the shell.\\n\\n```toml\\nshell = { program = \\"/bin/zsh\\", args = [\\"--login\\"] }\\n```\\n\\nDefaults:\\n\\n- MacOS: /bin/zsh --login\\n- Linux/BSD: user login shell\\n- Windows: powershell\\n\\n## Configuration file addition: working_dir\\n\\nDirectory the shell is started in. If this is unset the working\\ndirectory of the parent process will be used.\\n\\nThis configuration only has effect if use-fork is disabled\\n\\n```toml\\nworking_dir = \\"/Users/raphael/Documents/\\"\\n```\\n\\n## Configuration file removal: Advanced\\n\\nBreaking changes for configuration file regarding \\"Advanced\\". The configuration \\"Advanced\\" has moved to root level and \\"disable-render-when-unfocused\\" renamed to \\"disable-unfocused-render\\".\\n\\n```toml\\ntheme = \\"dracula\\"\\n\\n[advanced]\\ndisable-render-when-unfocused = true\\n```\\n\\n**now**\\n\\n```toml\\ntheme = \\"dracula\\"\\ndisable-unfocused-render = true\\n```\\n\\n## Changelog of v0.0.9\\n\\n- The configuration \\"Advanced\\" has moved to root level and \\"disable-render-when-unfocused\\" renamed to \\"disable-unfocused-render\\".\\n- Support to **spawn and fork processes**, spawn has became default. Spawn increases Rio compatibility in a broad range, like old MacOS versions (older or equal to Big Sur). However, If you want to use Rio terminal to fork processes instead of spawning processes, enable \\"use-fork\\" in the configuration file.\\n- Introduced \\"RIO_LOG_LEVEL\\" variable usage.\\n- Increased max tabs from 6 to 9.\\n- Fix Incorrect cursor position when using multi-byte characters (Ref: [#127](https://github.com/raphamorim/rio/issues/127))\\n- Fix bug [\\"black screen with nearly zero interactivity\\"](https://github.com/raphamorim/rio/issues/112) and new tab hanging.\\n- Fix cursor disappearing after resize.\\n- Introduction of \\"shell\\" and \\"working_dir\\" in configuration file.\\n- Multi window support [#97](https://github.com/raphamorim/rio/issues/97).\\n- Corrections on select and scroll experience (it was using wrongly font-bound for line calculation).\\n- Add selection color to the theme config (closed [#125](https://github.com/raphamorim/rio/issues/125)).\\n- Implemented Inverse (fix [#92](https://github.com/raphamorim/rio/issues/92)).\\n- Proper choose formats that matches Rio requirements (related [#122](https://github.com/raphamorim/rio/issues/122)).\\n- Corcovado: Filter windows crate dependency to only Windows targets (related: [#119](https://github.com/raphamorim/rio/issues/119)).\\n- Teletypewriter: Fixes for musl as target_env (related: [#119](https://github.com/raphamorim/rio/issues/119)).\\n- FreeBSD support, implementation by [yurivict](https://github.com/yurivict) ([Commit](https://github.com/freebsd/freebsd-ports/commit/8582b8c59459a7dc5112a94a39de45f6cc124c3e), Ref: [#115](https://github.com/raphamorim/rio/issues/115))"},{"id":"/2023/07/07/release-0.0.7","metadata":{"permalink":"/blog/2023/07/07/release-0.0.7","editUrl":"https://github.com/raphamorim/rio/tree/main/docs/blog/2023-07-07-release-0.0.7.mdx","source":"@site/blog/2023-07-07-release-0.0.7.mdx","title":"Rio 0.0.7","description":"Configuration reload, x11 and wayland stabilization, sugarloaf ported to WebAssembly, addition to NIX OS packages and other updates.","date":"2023-07-07T12:34:00.000Z","tags":[],"readingTime":2.86,"hasTruncateMarker":false,"authors":[],"frontMatter":{"layout":"post","title":"Rio 0.0.7","date":"2023-07-07 12:34","description":"Configuration reload, x11 and wayland stabilization, sugarloaf ported to WebAssembly, addition to NIX OS packages and other updates.","categories":"release macos linux webassembly"},"unlisted":false,"prevItem":{"title":"Rio 0.0.9","permalink":"/blog/2023/07/17/release-0.0.9"},"nextItem":{"title":"Rio 0.0.8","permalink":"/blog/2023/07/10/release-0.0.8"}},"content":"import { Tweet } from \'react-tweet\';\\n\\n## v0.0.7: Highlights\\n\\n- Support to custom fonts\\n- Configuration reload\\n- x11 and wayland stabilization\\n- Sugarloaf ported to WebAssembly\\n- Addition to NIX OS packages (kudos to [@otavio](https://github.com/otavio), PR: [NixOS/nixpkgs/pull/237664](https://github.com/NixOS/nixpkgs/pull/237664))\\n- Styles properties have been moved to root level\\n\\n## Overview\\n\\nRio release 0.0.7 is finally here, there\'s a lot of updates to cover so let\'s get started. I also would like to remind you that Rio is still unstable. This release adds a lot of bug fixes and feature additions in order to make Rio terminal stable.\\n\\n## Breaking change: Styles properties have been moved to root level\\n\\nThe only breaking change of v0.0.7 is that styles properties such as \\"font\\", \\"theme\\" and \\"font-size\\" moved to the root level.\\n\\nBefore:\\n\\n```toml\\ncursor = \'|\'\\n[style]\\nfont-size = 18\\ntheme = \\"lucario\\"\\n```\\n\\nAfter:\\n\\n```toml\\ncursor = \'|\'\\ntheme = \\"lucario\\"\\nfont-size = 18\\n```\\n\\n## Reload automatically when the configuration file has changed.\\n\\nAny file update in the configuration file will trigger a render operation in Rio terminal with the new configuration.\\n\\nIf you have any suggestion of configuration ideas to Rio, please feel free to [open an issue](https://github.com/raphamorim/rio/issues/new).\\n\\n## width and height is not longer available in the configuration file.\\n\\nThe property width and height doesn\'t work anymore after the 0.0.7 release.\\n\\nBefore you could set the initial width and height of the screen, this configuration is not longer possible. It was removed due to compatibility with different targets.\\n\\n## Stabilization of Linux x11 and Wayland\\n\\nIn older versions of Rio terminal it was possible to actually use Rio but it was slow and buggy for many users. Many fixes has been done in the v0.0.7 to bring the experience of Linux users close to what MacOS have right now.\\n\\nThe tweet below have a video demo that shows Rio running with X11:\\n\\n<Tweet id=\\"1670404595246419968\\" />\\n\\n## Custom font rendering\\n\\nNow you can actually use different installed fonts by changing the property \\"font\\".\\n\\nThe example below considers that you have \\"Fira code\\" font installed in your machine.\\n\\n```toml\\nfont = \\"Fira code\\"\\n```\\n\\nA quick look of how font updates looks like in v0.0.7:\\n\\n<Tweet id=\\"1670808836213547009\\" />\\n\\n## Sugarloaf ported to WebAssembly\\n\\nThe Rio support to WASM has moved one step ahead by introduction of Sugarloaf (Rio renderer) to WebAssembly.\\n\\nIn the image below you can see it in action:\\n\\n## Changelog of v0.0.7\\n\\n- Breaking changes for configuration file regarding \\"Style\\" property.\\n- Fix Background color not entirely set on vim [#88](https://github.com/raphamorim/rio/issues/88)\\n- Scroll now works for x11 and wayland.\\n- No longer renders to macos and x11 windows that are fully occluded / not directly visible.\\n- Introduced \\"window-opacity\\" config property for WebAssembly and Wayland builds.\\n- Add permissions instructions to Rio macos builds (Fix [#99](https://github.com/raphamorim/rio/issues/99)).\\n- Fixes for x11 and wayland rendering (Related: [#98](https://github.com/raphamorim/rio/issues/98) and [#100](https://github.com/raphamorim/rio/issues/100)).\\n- Performance fixes (Related: [#101](https://github.com/raphamorim/rio/issues/101)).\\n- Sugarloaf WebAssembly support.\\n- Fixed resize for all contexts: removed the glitch when resizing and switching between tabs.\\n- Fixed cursor inconsistencies [#95](https://github.com/raphamorim/rio/issues/95).\\n- Added command line interface support (\\"--help\\", \\"--version\\", \\"-e\\" and \\"--command\\").\\n- Added a fallback for WPGU request device operation: downlevel limits, which will allow the code to run on all possible hardware.\\n- Added \\"padding-x\\" to configuration.\\n- Reload automatically when the configuration file is changed ([#69](https://github.com/raphamorim/rio/issues/69)).\\n- Fix \\"Ctrl+D\\" and \\"exit\\" command not closing the app ([#87](https://github.com/raphamorim/rio/issues/87)).\\n- Changed default \\"light-black\\" color."},{"id":"/2023/07/10/release-0.0.8","metadata":{"permalink":"/blog/2023/07/10/release-0.0.8","editUrl":"https://github.com/raphamorim/rio/tree/main/docs/blog/2023-07-10-release-0.0.8.mdx","source":"@site/blog/2023-07-10-release-0.0.8.mdx","title":"Rio 0.0.8","description":"Support to Microsoft Windows, Homebrew casks and formulas, migration to Corcovado, selection improvements and increase/decrease font-size in a session.","date":"2023-07-03T12:34:00.000Z","tags":[],"readingTime":2.14,"hasTruncateMarker":false,"authors":[],"frontMatter":{"layout":"post","title":"Rio 0.0.8","date":"2023-07-03 12:34","description":"Support to Microsoft Windows, Homebrew casks and formulas, migration to Corcovado, selection improvements and increase/decrease font-size in a session.","categories":"release windows macos linux"},"unlisted":false,"prevItem":{"title":"Rio 0.0.7","permalink":"/blog/2023/07/07/release-0.0.7"},"nextItem":{"title":"Release 0.0.6","permalink":"/blog/2023/06/07/release-0.0.6"}},"content":"import { Tweet } from \'react-tweet\';\\n\\n## v0.0.8: Highlights\\n\\n- Support to Microsoft Windows.\\n- Support to Homebrew as cask [formulae.brew.sh/cask/rio](https://formulae.brew.sh/cask/rio).\\n- Support to Homebrew as formula [formulae.brew.sh/formula/rio](https://formulae.brew.sh/formula/rio).\\n- Selection improvements and increase/decrease font-size in a session.\\n- Migration to Corcovado.\\n\\n<br />\\n\\n# Overview\\n\\nRio release 0.0.8 is finally here, there\'s a lot of updates to cover so let\'s get started. I also would like to remind you that Rio is still unstable. This release adds a lot of bug fixes and feature additions in order to make Rio terminal stable.\\n\\n## Microsoft Windows\\n\\nAdded support to Microsoft Windows.\\n\\nWindows 10:\\n![Demo windows in use](/assets/posts/0.0.8/demo-windows-11.png)\\n\\nWindows 11:\\n![Demo windows in search](/assets/posts/0.0.8/demo-windows-11.png)\\n\\n## Homebrew as Cask\\n\\nHomebrew is a free and open-source software package management system that simplifies the installation of software on Apple\'s operating system, macOS.\\n\\nRio has been added as a cask [formulae.brew.sh/cask/rio](https://formulae.brew.sh/cask/rio) to their package source. To install Rio with homebrew you need to run the command below:\\n\\n```sh\\nbrew update && brew install --cask rio\\n```\\n\\nGithub reference: [github.com/Homebrew/homebrew-cask/pull/149824](https://github.com/Homebrew/homebrew-cask/pull/149824)\\n\\n## Homebrew as Formula\\n\\nRio has been added as a formula [formulae.brew.sh/formula/rio](https://formulae.brew.sh/formula/rio) to their package source. To install Rio with homebrew you need to run the command below:\\n\\n```sh\\nbrew update && brew install rio\\n```\\n\\nGithub reference: [github.com/Homebrew/homebrew-cask/pull/149824](https://github.com/Homebrew/homebrew-core/pull/134295)\\n\\n## Selection improvements and increase/decrease font-size in a session\\n\\nThe version v0.0.8 has added the following missing functionalities: Scroll and select, Semantic and line selection and the ability to increase, decrease and reset font size using keyboard shortcut during session coming for Rio terminal.\\n\\nBelow you can see a demo with all those functionalities:\\n\\n<Tweet id=\\"1673705339336761344\\" />\\n\\n## Migration to Corcovado\\n\\nRio terminal migrated from Mio to Corcovado. Corcovado is a maintained fork of mio 0.6.x along mio-signal-hook, mio-extras and using Windows API that works in Windows 11. It uses Rust edition 2021 instead of 2018.\\n\\nCorcovado also uses Rust standard library for net and io instead of Mio 0.6.x.\\n\\n<br />\\n\\n## Changelog of v0.0.8\\n\\n- Added generation of \\".msi\\" and \\".exe\\" files to the release pipeline (stable and canary).\\n- Support to Microsoft Windows 11.\\n- Ability to in/decrease font size using keyboard shortcut during session (ref: [#109](https://github.com/raphamorim/rio/issues/109))\\n- Inverted Canary and Stable icons.\\n- ANSI mouse reports (e.g: scroll and click working on VIM).\\n- Scroll and apply selection.\\n- Semantic and line selection.\\n- Rio is available in Homebrew casks and formulas.\\n- Rio stable versions are notarized now.\\n- Migration of mio, mio-extras, mio-signal-hook to Corcovado.\\n- Changed default black color to \\"#4c4345\\".\\n- Fix mouse position for when selecting text."},{"id":"/2023/06/07/release-0.0.6","metadata":{"permalink":"/blog/2023/06/07/release-0.0.6","editUrl":"https://github.com/raphamorim/rio/tree/main/docs/blog/2023-06-07-release-0.0.6.mdx","source":"@site/blog/2023-06-07-release-0.0.6.mdx","title":"Release 0.0.6","description":"Tabs support, underline and beam cursor, text styles and many bug fixes.","date":"2023-06-07T10:34:14.000Z","tags":[],"readingTime":1.355,"hasTruncateMarker":false,"authors":[],"frontMatter":{"layout":"post","title":"Release 0.0.6","date":"2023-06-07 10:34:14 +0200","categories":"macos linux release","description":"Tabs support, underline and beam cursor, text styles and many bug fixes."},"unlisted":false,"prevItem":{"title":"Rio 0.0.8","permalink":"/blog/2023/07/10/release-0.0.8"},"nextItem":{"title":"Release 0.0.5","permalink":"/blog/2023/05/31/release-0.0.5"}},"content":"import { Tweet } from \'react-tweet\';\\n\\n\\nRio release 0.0.6 is finally here, there\'s a lot of updates to cover so let\'s get started. I also would like to remind you that Rio is still unstable. This release adds a lot of bug fixes and feature additions in order to make Rio terminal stable.\\n\\n## Underline and strikethrough style\\n\\nSupport to text styling as such \\"Underline\\" and \\"Strikethrough\\".\\n\\n## Tabs support\\n\\nTabs has been added to Rio terminal for macos and linux platform.\\n\\nThe shortcuts:\\n\\n- Create tab: Logo key (Command in macos) + T.\\n- Close tab: Logo key (Command in macos) + W.\\n- Switch tab: Control key + Tab key.\\n\\nBelow you can see an example of usage:\\n\\n<Tweet id=\\"1664585160958922755\\" />\\n\\nNote: There\'s a limit of maximum of 6 tabs for now.\\n\\n## Support to Beam and Underline cursors\\n\\nBeam and underline cursor support has been added to Rio terminal. Also, block cursor and IME state allow a character to be visible.\\n\\n<Tweet id=\\"1664146499398139906\\" />\\n\\n## Changelog\\n\\n- Fix: support to clipboard in linux by [@joseemds](https://github.com/joseemds).\\n- Font style for custom fonts by [@OlshaMB](https://github.com/OlshaMB) (closed [#80](https://github.com/raphamorim/rio/issues/80) and [#81](https://github.com/raphamorim/rio/issues/81))\\n- Text styles Underline and Strikethrough (closed [#79](https://github.com/raphamorim/rio/issues/79)).\\n- Update default colors for tabs/tabs-active.\\n- Tabs support.\\n- Fix rendering tab and hidden chars by replacing to space by [@niuez](https://github.com/niuez), (closed [#56](https://github.com/raphamorim/rio/issues/56)).\\n- Block cursor hover a character and still allow it to be visible.\\n- Support to caret Beam and Underline cursor [#67](https://github.com/raphamorim/rio/issues/67) by [@niuez](https://github.com/niuez).\\n- Fix panics if custom font is not found [#68](https://github.com/raphamorim/rio/issues/68).\\n- MacOs ignore alt key in cntrlseq (same behavior as Terminal.app, Hyper, iTerm and etecetera)."},{"id":"/2023/05/31/release-0.0.5","metadata":{"permalink":"/blog/2023/05/31/release-0.0.5","editUrl":"https://github.com/raphamorim/rio/tree/main/docs/blog/2023-05-31-release-0.0.5.md","source":"@site/blog/2023-05-31-release-0.0.5.md","title":"Release 0.0.5","description":"Arrival to Linux, themes support and many bug fixes.","date":"2023-05-31T10:34:14.000Z","tags":[],"readingTime":1.235,"hasTruncateMarker":false,"authors":[],"frontMatter":{"layout":"post","title":"Release 0.0.5","date":"2023-05-31 10:34:14 +0200","categories":"macos linux release","description":"Arrival to Linux, themes support and many bug fixes."},"unlisted":false,"prevItem":{"title":"Release 0.0.6","permalink":"/blog/2023/06/07/release-0.0.6"}},"content":"Rio release 0.0.5 is finally here, there\'s a lot of updates to cover so let\'s get started. I also would like to remind you that Rio is still unstable. This release adds a lot of bug fixes and feature additions in order to make Rio terminal stable.\\n\\n## New configuration path\\n\\nConfiguration path has changed from `{$HOME}/.rio/` to `{$HOME}/.config/rio`.\\n\\nChanges were applied for macOS and Linux.\\n\\n## Linux Support\\n\\nRio is now available to Linux, build information was added in the [install](/docs/install) page.\\n\\n![Linux support](/assets/posts/0.0.5/linux.jpeg)\\n\\nLinux builds are considered less stable than macOs, due to macOs features availability comparison.\\n\\n## Themes Support\\n\\nA new property was added to Rio configuration file called \\"theme\\". You can set the theme that you want to use and Rio will look in the folder \\"themes\\" in the configuration path.\\n\\n![Themes support](/assets/posts/0.0.5/themes.png)\\n\\nDracula theme example:\\n\\n![Example dracula](/assets/posts/0.0.5/dracula-nvim.png)\\n\\n## Bold and italic style\\n\\nSupport to text styling as such \\"bold\\" and \\"italic\\".\\n\\n![Themes support](/assets/posts/0.0.5/font-macos.png)\\n\\n## Changelog\\n\\n- Fix to render specific 24bit colors [#66](https://github.com/raphamorim/rio/issues/#66) by [@niuez](https://github.com/niuez).\\n- Cross build for arm64 and x86\\n- Bold and Italic support [#33](https://github.com/raphamorim/rio/issues/#33).\\n- Add RioEvent::ColorRequest events to write color updates on pty.\\n- Theme support [#42](https://github.com/raphamorim/rio/issues/42).\\n- Fix font-size dependency for serialization\\n- Fix cursor visibility on VI mode and scroll [#51](https://github.com/raphamorim/#51)\\n- Performance fixes for rendering from teletypewriter updates.\\n- Fix scale issues for 1.0 scale factor or using monitor with different scale factor. [#50](https://github.com/raphamorim/rio/issues/#50)\\n- Improved release process to only contain Rio.app file. [#54](https://github.com/raphamorim/rio/issues/#54)"}]}}')}}]);